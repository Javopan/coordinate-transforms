# Form implementation generated from reading ui file '.\matrixcalculator.ui'
#
# Created by: PyQt6 UI code generator 6.2.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MatrixCalculator(object):
    def setupUi(self, MatrixCalculator):
        MatrixCalculator.setObjectName("MatrixCalculator")
        MatrixCalculator.resize(703, 584)
        self.gridLayout = QtWidgets.QGridLayout(MatrixCalculator)
        self.gridLayout.setObjectName("gridLayout")
        self.bnt_load_pops = QtWidgets.QPushButton(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_load_pops.setFont(font)
        self.bnt_load_pops.setObjectName("bnt_load_pops")
        self.gridLayout.addWidget(self.bnt_load_pops, 0, 0, 1, 1)
        self.bnt_load_nodes = QtWidgets.QPushButton(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_load_nodes.setFont(font)
        self.bnt_load_nodes.setObjectName("bnt_load_nodes")
        self.gridLayout.addWidget(self.bnt_load_nodes, 1, 0, 1, 1)
        self.lbl_apikey = QtWidgets.QLabel(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbl_apikey.setFont(font)
        self.lbl_apikey.setStyleSheet("color: rgb(50, 175, 74);")
        self.lbl_apikey.setObjectName("lbl_apikey")
        self.gridLayout.addWidget(self.lbl_apikey, 2, 0, 1, 1)
        self.lbl_threshold = QtWidgets.QLabel(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbl_threshold.setFont(font)
        self.lbl_threshold.setStyleSheet("color: rgb(50, 175, 74);")
        self.lbl_threshold.setObjectName("lbl_threshold")
        self.gridLayout.addWidget(self.lbl_threshold, 3, 0, 1, 2)
        self.frm_los = QtWidgets.QFrame(MatrixCalculator)
        self.frm_los.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frm_los.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frm_los.setObjectName("frm_los")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frm_los)
        self.verticalLayout.setObjectName("verticalLayout")
        self.bnt_loadprofiles = QtWidgets.QPushButton(self.frm_los)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_loadprofiles.setFont(font)
        self.bnt_loadprofiles.setObjectName("bnt_loadprofiles")
        self.verticalLayout.addWidget(self.bnt_loadprofiles)
        self.bnt_getprofiles = QtWidgets.QPushButton(self.frm_los)
        self.bnt_getprofiles.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_getprofiles.setFont(font)
        self.bnt_getprofiles.setObjectName("bnt_getprofiles")
        self.verticalLayout.addWidget(self.bnt_getprofiles)
        self.bnt_getprofile = QtWidgets.QPushButton(self.frm_los)
        self.bnt_getprofile.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_getprofile.setFont(font)
        self.bnt_getprofile.setObjectName("bnt_getprofile")
        self.verticalLayout.addWidget(self.bnt_getprofile)
        self.bnt_calculatelos_all = QtWidgets.QPushButton(self.frm_los)
        self.bnt_calculatelos_all.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_calculatelos_all.setFont(font)
        self.bnt_calculatelos_all.setObjectName("bnt_calculatelos_all")
        self.verticalLayout.addWidget(self.bnt_calculatelos_all)
        self.chk_images_all = QtWidgets.QCheckBox(self.frm_los)
        self.chk_images_all.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.chk_images_all.setFont(font)
        self.chk_images_all.setStyleSheet("color: rgb(50, 175, 74);")
        self.chk_images_all.setObjectName("chk_images_all")
        self.verticalLayout.addWidget(self.chk_images_all)
        self.bnt_calculatelos_single = QtWidgets.QPushButton(self.frm_los)
        self.bnt_calculatelos_single.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_calculatelos_single.setFont(font)
        self.bnt_calculatelos_single.setObjectName("bnt_calculatelos_single")
        self.verticalLayout.addWidget(self.bnt_calculatelos_single)
        self.chk_images_single = QtWidgets.QCheckBox(self.frm_los)
        self.chk_images_single.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.chk_images_single.setFont(font)
        self.chk_images_single.setStyleSheet("color: rgb(50, 175, 74);")
        self.chk_images_single.setObjectName("chk_images_single")
        self.verticalLayout.addWidget(self.chk_images_single)
        self.btn_optimize_heights = QtWidgets.QPushButton(self.frm_los)
        self.btn_optimize_heights.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btn_optimize_heights.setFont(font)
        self.btn_optimize_heights.setObjectName("btn_optimize_heights")
        self.verticalLayout.addWidget(self.btn_optimize_heights)
        self.bnt_generatekml = QtWidgets.QPushButton(self.frm_los)
        self.bnt_generatekml.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_generatekml.setFont(font)
        self.bnt_generatekml.setObjectName("bnt_generatekml")
        self.verticalLayout.addWidget(self.bnt_generatekml)
        self.bnt_save_excel = QtWidgets.QPushButton(self.frm_los)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_save_excel.setFont(font)
        self.bnt_save_excel.setObjectName("bnt_save_excel")
        self.verticalLayout.addWidget(self.bnt_save_excel)
        self.lbl_fileid = QtWidgets.QLabel(self.frm_los)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_fileid.sizePolicy().hasHeightForWidth())
        self.lbl_fileid.setSizePolicy(sizePolicy)
        self.lbl_fileid.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbl_fileid.setFont(font)
        self.lbl_fileid.setStyleSheet("color: rgb(50, 175, 74);")
        self.lbl_fileid.setObjectName("lbl_fileid")
        self.verticalLayout.addWidget(self.lbl_fileid)
        self.txt_fileprefix = QtWidgets.QLineEdit(self.frm_los)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_fileprefix.sizePolicy().hasHeightForWidth())
        self.txt_fileprefix.setSizePolicy(sizePolicy)
        self.txt_fileprefix.setMinimumSize(QtCore.QSize(158, 26))
        self.txt_fileprefix.setObjectName("txt_fileprefix")
        self.verticalLayout.addWidget(self.txt_fileprefix)
        self.gridLayout.addWidget(self.frm_los, 4, 5, 1, 1)
        self.tbl_linksmatrix = QtWidgets.QTreeWidget(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tbl_linksmatrix.setFont(font)
        self.tbl_linksmatrix.setObjectName("tbl_linksmatrix")
        self.tbl_linksmatrix.headerItem().setText(0, "1")
        self.gridLayout.addWidget(self.tbl_linksmatrix, 4, 0, 1, 5)
        self.txt_load_pops = QtWidgets.QLineEdit(MatrixCalculator)
        self.txt_load_pops.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.txt_load_pops.setFont(font)
        self.txt_load_pops.setObjectName("txt_load_pops")
        self.gridLayout.addWidget(self.txt_load_pops, 0, 1, 1, 3)
        self.txt_load_nodes = QtWidgets.QLineEdit(MatrixCalculator)
        self.txt_load_nodes.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.txt_load_nodes.setFont(font)
        self.txt_load_nodes.setObjectName("txt_load_nodes")
        self.gridLayout.addWidget(self.txt_load_nodes, 1, 1, 1, 3)
        self.txt_api = QtWidgets.QLineEdit(MatrixCalculator)
        self.txt_api.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.txt_api.setFont(font)
        self.txt_api.setObjectName("txt_api")
        self.gridLayout.addWidget(self.txt_api, 2, 1, 1, 3)
        self.spn_distance = QtWidgets.QDoubleSpinBox(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.spn_distance.setFont(font)
        self.spn_distance.setFrame(False)
        self.spn_distance.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.spn_distance.setDecimals(3)
        self.spn_distance.setMinimum(0.04)
        self.spn_distance.setMaximum(100.0)
        self.spn_distance.setProperty("value", 5.0)
        self.spn_distance.setObjectName("spn_distance")
        self.gridLayout.addWidget(self.spn_distance, 3, 2, 1, 1)
        self.bnt_calculate_links = QtWidgets.QPushButton(MatrixCalculator)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bnt_calculate_links.setFont(font)
        self.bnt_calculate_links.setObjectName("bnt_calculate_links")
        self.gridLayout.addWidget(self.bnt_calculate_links, 3, 3, 1, 1)
        self.lst_log = QtWidgets.QListWidget(MatrixCalculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lst_log.sizePolicy().hasHeightForWidth())
        self.lst_log.setSizePolicy(sizePolicy)
        self.lst_log.setMinimumSize(QtCore.QSize(300, 134))
        self.lst_log.setMaximumSize(QtCore.QSize(16777215, 134))
        self.lst_log.setObjectName("lst_log")
        self.gridLayout.addWidget(self.lst_log, 0, 4, 4, 2)

        self.retranslateUi(MatrixCalculator)
        QtCore.QMetaObject.connectSlotsByName(MatrixCalculator)

    def retranslateUi(self, MatrixCalculator):
        _translate = QtCore.QCoreApplication.translate
        MatrixCalculator.setWindowTitle(_translate("MatrixCalculator", "Form"))
        self.bnt_load_pops.setText(_translate("MatrixCalculator", "Load POPS"))
        self.bnt_load_nodes.setText(_translate("MatrixCalculator", "Load Nodes"))
        self.lbl_apikey.setText(_translate("MatrixCalculator", "Google API Key"))
        self.lbl_threshold.setText(_translate("MatrixCalculator", "Threshold Distance"))
        self.bnt_loadprofiles.setToolTip(_translate("MatrixCalculator", "Loads an already fetched elevation profile"))
        self.bnt_loadprofiles.setText(_translate("MatrixCalculator", "Load Profiles"))
        self.bnt_getprofiles.setToolTip(_translate("MatrixCalculator", "Connects to Google Elevation API to get the profiles of all the links (saves the result)"))
        self.bnt_getprofiles.setText(_translate("MatrixCalculator", "Get Profiles (all)"))
        self.bnt_getprofile.setToolTip(_translate("MatrixCalculator", "Connects to Google Elevation API to get the profile of the selected link. (won\'t be saved)"))
        self.bnt_getprofile.setText(_translate("MatrixCalculator", "Get Profile (single)"))
        self.bnt_calculatelos_all.setToolTip(_translate("MatrixCalculator", "Checks all the LoS of all the links in the Link Matrix that passed the threshold."))
        self.bnt_calculatelos_all.setText(_translate("MatrixCalculator", "Calculate LoS (all)"))
        self.chk_images_all.setToolTip(_translate("MatrixCalculator", "If enabled the Calculate LoS(all) will also generate a PDF with the links profile"))
        self.chk_images_all.setText(_translate("MatrixCalculator", "with images"))
        self.bnt_calculatelos_single.setToolTip(_translate("MatrixCalculator", "Checks the LoS of a single selected link in the Link Matrix."))
        self.bnt_calculatelos_single.setText(_translate("MatrixCalculator", "Calculate LoS (single)"))
        self.chk_images_single.setToolTip(_translate("MatrixCalculator", "If enabled the Calculate LoS(single) check will generate a PDF file"))
        self.chk_images_single.setText(_translate("MatrixCalculator", "with images"))
        self.btn_optimize_heights.setText(_translate("MatrixCalculator", "Optimize Height"))
        self.bnt_generatekml.setToolTip(_translate("MatrixCalculator", "Generates a KML with the links of the Link Matrix"))
        self.bnt_generatekml.setText(_translate("MatrixCalculator", "Generate KML"))
        self.bnt_save_excel.setToolTip(_translate("MatrixCalculator", "saves the Link Matrix to a CSV file"))
        self.bnt_save_excel.setText(_translate("MatrixCalculator", "Save LoS Excel"))
        self.lbl_fileid.setText(_translate("MatrixCalculator", "File Identifier Name"))
        self.txt_fileprefix.setToolTip(_translate("MatrixCalculator", "The output file will have in its name the written identifier"))
        self.txt_api.setPlaceholderText(_translate("MatrixCalculator", "Google Elevation API Key"))
        self.spn_distance.setToolTip(_translate("MatrixCalculator", "Distance threshold to consider it a link"))
        self.spn_distance.setSuffix(_translate("MatrixCalculator", " km"))
        self.bnt_calculate_links.setToolTip(_translate("MatrixCalculator", "Calculates a link matrix between POPs and Nodes with a link distance threshold set by the spinbox"))
        self.bnt_calculate_links.setText(_translate("MatrixCalculator", "Calculate Links"))
